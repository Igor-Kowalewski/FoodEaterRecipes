{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/creator.service.ts","./src/app/views/ingredientCreator.component.ts","./src/app/views/ingredientCreator.component.html","./src/app/views/recipeCreator.component.ts","./src/app/views/recipeCreator.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-recipe-creator',\n    templateUrl: 'app.component.html',\n    styles: []\n})\nexport class AppComponent {\n    title = 'Add ingredient';\n}\n","<div class=\"row\">\r\n    <div class=\"col-12 col-md-6\">\r\n        <ingredientCreator></ingredientCreator>\r\n    </div>\r\n    <div class=\"col-12 col-md-6\">\r\n        <recipeCreator></recipeCreator>\r\n    </div>\r\n</div> ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { Creator } from './services/creator.service';\r\nimport IngredientCreator from './views/ingredientCreator.component';\r\nimport RecipeCreator from './views/recipeCreator.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\n\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        IngredientCreator,\n        RecipeCreator\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        FormsModule,\n        MatDividerModule,\n        MatListModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatInputModule\n    ],\n    providers: [\n        Creator\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Ingredient } from \"../shared/Ingredient\";\r\n\r\n@Injectable()\r\nexport class Creator {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public ingredients: Ingredient[] = [];\r\n    public recipeIngredients: Ingredient[] = [];\r\n    public recipeSummary: Ingredient = {\r\n        name: null || '',\r\n        weight: null || 0,\r\n        kcal: null || 0,\r\n        carbs: null || 0,\r\n        fats: null || 0,\r\n        proteins: null || 0\r\n    }\r\n\r\n    // Zapytanie do kontrolera a następnie api@nutritionix.com\r\n    getIngredients(prefix: string): Observable<void> {\r\n        let url = \"/api/Ingredients\";\r\n        let headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        let params = new HttpParams().set(\"prefix\", prefix);\r\n\r\n        return this.http.get<Ingredient[]>(url, { headers: headers, params: params })\r\n            .pipe(map(data => {\r\n                this.ingredients = data // tutaj trza poprawić \r\n                return;\r\n            }));\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport { Creator } from \"../services/creator.service\";\r\nimport { Ingredient } from \"../shared/Ingredient\";\r\n\r\n\r\n@Component({\r\n    selector: \"ingredientCreator\",\r\n    templateUrl: \"ingredientCreator.component.html\"\r\n})\r\n\r\nexport default class IngredientCreator {\r\n    @Input() prefix!: string;            // wzorzec używany do wyszukiwania w API składników\r\n\r\n    public ingredientSelected: string = \"\";       // opcja wybrana na liście rozwijanej Autocomplete\r\n\r\n    public ingredientTemplate: Ingredient = {\r\n        name: null || '',\r\n        weight: null || '',\r\n        kcal: null || '',\r\n        carbs: null || '',\r\n        fats: null || '',\r\n        proteins: null || ''\r\n    }\r\n\r\n\r\n    // inicjalizacja serwisu Creator - pobieranie danych z API do backendu i z backendu do frontendu\r\n    constructor(public creator: Creator) {\r\n\r\n    }\r\n\r\n\r\n    // było używane jedynie w ramach testu API\r\n    ngOnInit(): void {\r\n        //this.creator.getIngredients(\"bread\").subscribe();\r\n    }\r\n\r\n\r\n    // update listy składników na liście rozwijanej kontrolki Autocomplete\r\n    updateIngredientList(prefix: string): void {\r\n        this.creator.getIngredients(this.prefix)\r\n            .subscribe();\r\n    }\r\n\r\n\r\n    // znajduję pierwszy element z Autocomplete, który pokrywa się z szukanym wzorcem wybranym z listy\r\n    setTemplateIngredient(ingredientSelected: string) {\r\n        this.ingredientSelected = ingredientSelected;\r\n\r\n        let temp = this.creator.ingredients.find((i) => { return i.name === ingredientSelected });\r\n\r\n        if (temp !== undefined) {\r\n            this.ingredientTemplate = temp;\r\n        }\r\n\r\n        console.log(this.ingredientTemplate.name);\r\n    }\r\n\r\n\r\n    // dodawanie nowego składnika do przepisu\r\n    addIngredient(ingredientTemplate: Ingredient) {\r\n        if (ingredientTemplate.name != '')\r\n        {\r\n            console.log(ingredientTemplate.name);\r\n\r\n            let ingredientCopy: Ingredient = { ...ingredientTemplate }; // shallow copy template\r\n            this.creator.recipeIngredients.push(ingredientCopy); // and push copy to recipeingredients\r\n            this.updateSummary();\r\n        }\r\n    }\r\n\r\n    updateSummary(): void {\r\n        this.creator.recipeSummary.weight = this.creator.recipeIngredients.reduce((sum, current) => sum + Number(current.weight), 0);\r\n        this.creator.recipeSummary.kcal = this.creator.recipeIngredients.reduce((sum, current) => sum + Number(current.kcal), 0);\r\n        this.creator.recipeSummary.carbs = this.creator.recipeIngredients.reduce((sum, current) => sum + Number(current.carbs), 0);\r\n        this.creator.recipeSummary.fats = this.creator.recipeIngredients.reduce((sum, current) => sum + Number(current.fats), 0);\r\n        this.creator.recipeSummary.proteins = this.creator.recipeIngredients.reduce((sum, current) => sum + Number(current.proteins), 0);\r\n    }\r\n}","<div class=\"row border border-dark rounded-lg p-3 m-1\">\r\n    <h5 class=\"h3\">Ingredient</h5>\r\n    <mat-divider></mat-divider><br>\r\n    <div class=\"container p-0 m-0\">\r\n        <!--<div class=\"col p-1 m-0 d-inline-block text-dark\">-->\r\n        <!--Zamieniam wersję ASP.NET na Angularową-->\r\n        <!--@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = \"form-control p-2 m-0\", @id = \"SearchInputIngredient\", @placeholder = \"Search...\" }});-->\r\n        <!--</div>-->\r\n\r\n        <form class=\"col col-10 col-md-9 p-2 m-0 d-inline-block\">\r\n            <mat-form-field>\r\n                <input type=\"text\" name=\"prefix\" [(ngModel)]=\"prefix\" (ngModelChange)=\"updateIngredientList(prefix)\" matInput [matAutocomplete]=\"auto\" placeholder=\"Search ingredient\" />\r\n                <mat-autocomplete #auto=\"matAutocomplete\" panelWidth=\"auto\" (optionSelected)=\"setTemplateIngredient($event.option.value)\">\r\n                    <mat-option *ngFor=\"let i of creator.ingredients\" [value]=\"i.name\">\r\n                        {{i.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </form>\r\n\r\n\r\n        <div class=\"col col-2 col-md-3 p-0 m-0 d-inline-block\">\r\n            <button class=\"btn btn-light btn-block\" id=\"addIngredientBtn\" (click)=\"addIngredient(ingredientTemplate)\"><i class=\"fas fa-plus fa-1x\"></i> </button>\r\n        </div>\r\n\r\n\r\n        <div class=\"col col-12 p-0 m-0 d-inline-block bg-dark rounded m-0 p-1\">\r\n            <div class=\"col col-6 m-0 p-0 d-inline-block\">\r\n                <form class=\"m-1 p-1\">\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" required type=\"text\" placeholder=\"Name\" [(ngModel)]=\"ingredientTemplate.name\" name=\"name\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" numbersOnly required type=\"number\" placeholder=\"Weight (g)\" [(ngModel)]=\"ingredientTemplate.weight\" name=\"weight\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" numbersOnly required type=\"number\" placeholder=\"Kcal per 100g\" [(ngModel)]=\"ingredientTemplate.kcal\" name=\"kcal\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" numbersOnly required type=\"number\" placeholder=\"Carbohydrates per 100g\" [(ngModel)]=\"ingredientTemplate.carbs\" name=\"carbs\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" numbersOnly required type=\"number\" placeholder=\"Fats per 100g\" [(ngModel)]=\"ingredientTemplate.fats\" name=\"fats\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput class=\"mat-form-field m-0 p-1\" numbersOnly required type=\"number\" placeholder=\"Proteins per 100g\" [(ngModel)]=\"ingredientTemplate.proteins\" name=\"proteins\" />\r\n                    </mat-form-field>\r\n                </form>\r\n            </div>\r\n\r\n            <!--<div class=\"col col-6 m-0 p-0 d-inline-block position-top\">\r\n                <mat-list>\r\n                    <mat-list-item> Pepper </mat-list-item>\r\n                    <mat-list-item> Salt </mat-list-item>\r\n                    <mat-list-item> Paprika </mat-list-item>\r\n                </mat-list>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n","\r\nimport { Component } from \"@angular/core\";\r\nimport { Creator } from \"../services/creator.service\";\r\nimport { Ingredient } from \"../shared/Ingredient\";\r\n\r\n\r\n@Component({\r\n    selector: \"recipeCreator\",\r\n    templateUrl: \"recipeCreator.component.html\"\r\n})\r\n\r\n\r\nexport default class RecipeCreator {\r\n    public ingredients: Ingredient[] = [];\r\n    public recipeSummary: Ingredient = {\r\n        name: null || '',\r\n        weight: null || 0,\r\n        kcal: null || 0,\r\n        carbs: null || 0,\r\n        fats: null || 0,\r\n        proteins: null || 0\r\n    }\r\n\r\n\r\n    constructor(private creator: Creator) {\r\n        this.ingredients = creator.recipeIngredients;\r\n        this.recipeSummary = creator.recipeSummary;\r\n    }\r\n\r\n\r\n}","<div class=\"row border border-dark rounded-lg p-3 m-1\">\r\n    <h5 class=\"h3\">Recipe</h5>\r\n    <mat-divider></mat-divider>\r\n    <br>\r\n    <div class=\"container p-0 m-0\">\r\n        <div class=\"card bg-dark table-responsive p-0 m-0 col col-12\">\r\n            <div class=\"card-body p-0 m-0\">\r\n                <table class=\"table table-hover text-center table-striped table-dark text-light p-0 m-0\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr p-0 m-0>\r\n                            <th scope=\"col\">#</th>\r\n                            <th>Name</th>\r\n                            <th>Weight</th>\r\n                            <th>Kcal</th>\r\n                            <th>Carbs</th>\r\n                            <th>Fats</th>\r\n                            <th>Proteins</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let i of ingredients; let j = index\">\r\n                            <td scope=\"col\">{{ j+1 }}</td>\r\n                            <td scope=\"col\">{{ i.name }}</td>\r\n                            <td scope=\"col\">{{ i.weight | number : '1.0-0' }}</td>\r\n                            <td scope=\"col\">{{ i.kcal | number : '1.0-0' }}</td>\r\n                            <td scope=\"col\">{{ i.carbs | number : '1.0-0' }}</td>\r\n                            <td scope=\"col\">{{ i.fats | number : '1.0-0' }}</td>\r\n                            <td scope=\"col\">{{ i.proteins | number : '1.0-0' }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td scope=\"row\"><strong>Total:</strong></td>\r\n                            <td>{{ recipeSummary.name | number : '1.0-0' }}</td>\r\n                            <td>{{ recipeSummary.weight | number : '1.0-0' }}</td>\r\n                            <td>{{ recipeSummary.kcal | number : '1.0-0' }}</td>\r\n                            <td>{{ recipeSummary.carbs | number : '1.0-0' }}</td>\r\n                            <td>{{ recipeSummary.fats | number : '1.0-0' }}</td>\r\n                            <td>{{ recipeSummary.proteins | number : '1.0-0' }}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}